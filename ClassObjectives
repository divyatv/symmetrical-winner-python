May 28th 2019:
---------------------------------------------
*Class Objectives*

```Students will be comfortable formatting spreadsheets using VBA code
Students will understand how to loop through a table using VBA code and check for changes in values```
conda create -n PythonData python=3.6 anaconda

June 1 2019:
------------------------------------------
Class Objectives
    Students should feel confident reading data into Python from CSV files.
    Students should feel confident writing data from Python into CSV files.
    Students should know how to zip two lists together and know when this is helpful.
    Students should understand well how to create and use Python functions.

June 4 2019:
-------------------
*Class Objectives*
```Students will be able to add, commit, and push code up to GitHub from the command line.
Students will be able to create and use Python dictionaries.
Students will be able to read data in from a dictionary.
Students will be able to use list comprehensions.
Students will be able to write and re use Python function.
Students will have a firm understanding of coding logic and reasoning.```

June 6 2019:
--------------------
Class Objectives

    Students will be able to serve Jupyter notebook files from local directories and connect to their development environment
    Students will be able to create Pandas DataFrames from scratch
    Students will understand how to run functions on Pandas DataFrames
    Students will know how to read/write DataFrames from/to CSV files using Pandas

June 8 2019:
----------------------
dir() will give you the list of in scope variables:
globals() will give you a dictionary of global variables
locals() will give you a dictionary of local variables

Students will understand how to navigate through DataFrames using Loc and Iloc
Students will understand how to filter and slice Pandas DataFrames
Students will understand how to create and access Pandas GroupBy objects
Students will understand how to sort DataFrames

June 11 2019:
------------------
Students will know how to merge DataFrames together whilst understanding the differences between inner, outer, left, and right merges.
Students will be able to slice data using the cut() method and create new values based upon a series of bins.
Students will feel more confident in their ability to fix Python/Pandas bugs within Jupyter Notebook.
Students will be able to use Google to explore additional Pandas functionality when necessary.

June 13 2019:
-------------------------------------
Students should understand Matplotlib's pyplot interface.
Students should be able to create line, bar, scatter, and pie charts.
Students should be able to change the appearance of their plots.

June 15 2019
------------------------------------------------
Students will feel comfortable creating plots using the DataFrame.plot() method
Students will understand the advantages and disadvantages of creating charts using the DataFrame.plot()method.
Students will be able to work their way through a complex data set using Pandas and then chart 
some visualizations based upon the cleaned DataFrame.

June 18 2019
-------------------------------------------------------------------
Students will be able to define mean, median, and mode, and choose which one is most appropriate to describe a given data set.
Students will be able to explain the meaning of variance and standard deviation.
Students will be able to describe standard error and the difference between a sample and a population.
Students will be able to add error bars to their plots.
Students will be able to fit lines to their data.

June 20 2019
------------------------------------------------------------------------------
Students will be able to make GET requests with requests.
Students will be able to convert JSON into a Python dictionary.
Students will read and apply API documentation.
Students will sign up for and use an API key.

June 22 2019
---------------------------------------------------------------------------------
Students will create applications from scratch using nothing but their knowledge of Python and an API documentation
Students will load JSON from API responses into a Pandas DataFrame
Students will be able to use try and except blocks to handle errors

June 25 2019
-------------------------------------------------------------------------------------------
Students will be able to successfully use the Google Maps and Places API to obtain information about geographic areas.
Students will understand how to use the Census API wrapper.
Students will understand the concept of rate limits and the importance of creating "test cases" prior to running large scripts.
Students will have a firmer understanding of how to dissect new API documentation.
Students will be able to visually represent data on a map with Jupyter Gmaps.

July 16 2019
---------------------------------------------------------------------------------------
Introduction to SQL

July 18 2019
---------------------------------------------------------------------------------------
Create aggregate queries.
Create subqueries to explore data further.
Create views and run subqueries off of them.

July 25 2019
-----------------------

Students will learn how to create Python classes and objects
Students will be able to create, read, update, and delete data from a SQL database using SQLAlchemy's ORM
Students will be able to reflect existing databases.

SqlAlchemy
Flask

July 30 2019
-------------------------------------------------
* Students will gain a high-level understanding of HTML, CSS, and JavaScript and what their roles are when creating websites.
* Students will understand the basic parts of an HTML web page and how to create one from scratch.
* Students will learn to cover and utilize some of the most common HTML tags and selectors.

August 1 2019
--------------------------------------------------------------
* Students should have a firm understanding of how to deploy HTML webpages to the internet using GitHub Pages.
* Students will understand the basics of CSS styling.
* Students will have a basic grasp on how to position HTML elements on a webpage using CSS.

August 3 2019 Saturday
-------------------------------------------------------------------------------
https://codingbootcamp.hosted.panopto.com/Panopto/Pages/Sessions/List.aspx#folderID=%2286a6d914-cee7-4cc7-aae2-aa4801121fee%22
* Students will be able to discuss media queries, the technology that is used to create the responsive Bootstrap grid.
* Students will cover the Bootstrap Grid, and discover how to utilize it to position the elements on the page.
* Students will discover how to quickly and easily build web pages using pre-built Bootstrap components.

August 6 2019 Tuesday
--------------------------------------------------------------------------------------------------------------
* Students will be able to create and connect to local MongoDB databases
* Students will learn to create, read, update, and delete MongoDB documents using the Mongo Shell
* Students will create simple Python applications that connect to and modify MongoDB databases using the PyMongo library

August 8 2019 Thursday
-----------------------------------------------------------------------------------
Class Objectives
Students will be able to use Beautiful Soup to scrape their own data from the web.
Students will learn to save the results of web scraping into MongoDB.

August 10 2019 Saturday
---------------------------------------------------------
Students will become comfortable rendering templates with Flask using data retrieved from a Mongo database.
Students will be able to use Beautiful Soup to scrape data
Students will use PyMongo to save data to a Mongo database
Students will use Flask to render templates

August 22 2019
------------------------------------
Students will understand and be able to use forEach and callback functions and how to use them.
Students will create, update, and iterate JavaScript Objects.
Students will understand how to apply map and filter to parse data.
Students will be able to create and use arrow functions to simplify code.
Students will understand the basic structure of a Bootstrap HTML table.

August 24 2019
---------------------------
* Students will use D3 for basic DOM manipulation.
* Students will be able to populate a table using static data structures.
* Students will understand events.
* Students will be able to use `this` to reference elements.
* Students will use D3 to attach events to DOM elements.
* Students will dynamically manipulate the DOM through events.
* Students will be able to dynamically filter tables.

August 27 2019
---------------------------------------
* Students will be able to use arrow functions, `.map()`, and `forEach()` for data manipulation.
* Students will learn to use Plotly to create the fundamental charts: Box, scatter, bar, pie, and line plots.
* Students will use Plotly's `layout` object to customize the appearance of their charts.
* Students will annotate charts with labels; text; and hover info.

September 3 2019
-------------------------------------------------------
### Class Objectives
* Students will be able to use Flask to render a Plotly visualization to the browser.
* Students will use Flask to serve data to a Plotly frontend.

September 5 2019
----------------------------------------------------------------------------
Students will gain a high-level understanding of SVG elements and how to append/modify them using D3.
Students will understand how to bind data to SVG elements using D3 so as to create basic bar charts from scratch.
Students will create a bar chart with axes using D3 so as to visualize data.

September 7 2019
-------------------------------------------------------------
* Students will deepen their knowledge of the D3 library.
* Students will create different types of charts and graphs using D3.
* Students will cover creating scales and axes in D3.

September 10 2019
-------------------------------------------------------------------
* Students will understand the benefits that visualizing data with maps can provide.
* Students will learn the basics of creating maps and plotting data with the Leaflet.js library.
* Students will gain an understanding of the GeoJSON format.
* Students will understand the concept of layers and layer controls and how we can use them to add interactivity to our maps.

September 12 2019
------------------------------------------------------------
Students will gain a firm grasp of mapping with GeoJSON.
Students will learn about and practice using Leaflet plugins and third-party libraries.
Students will learn how different maps can effectively visualize different datasets.

September 13 2019
--------------------------------------------------------------
Students will gain a Leaflet mastery by completing an in-class project.
Form project 2 teams and draft project 2 proposals.

September 21 2019
-------------------------------------------------
Students will learn the basics of R syntax.
Students will learn the fundamental R data types.
Students will gain familiarity with RStudio.
Students will learn how to create tibbles.
Students will be able to manipulate data in tibbles.
Students will be able to compare and contrast the features of Python and R.

install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%

September 24 2019
=-----------------------------
Class Objectives
Students will be able to load data into tibbles.
Students will be able to use the pipe operator to sequentialize operations.
Students will be able to create tibbles.
Students will be able to manipulate data in tibbles.

October 1 2019
-------------------
PROJECT2 presentation
______________________

October 3 2019
=================================================
Students will understand how to calculate and apply regression analysis to datasets.
Students will understand the difference between linear and non-linear data.
Students will understand how to quantify and validate linear models.
Students will understand how to apply scaling and normalization as part of the data preprocessing step in machine learning.
